/**
 * Copyright (C) 2001 Paul Cody Johnston - pcj@inxar.org
 * @author Paul Cody Johnston - pcj@inxar.org
 */
package com.inxar.syntacs.translator.regexp;

import com.inxar.syntacs.automaton.pushdown.MesoArrayDPA;
import com.inxar.syntacs.util.Pickler;

/**
 * Automatically generated by <a href='http://www.inxar.org/syntacs'>Syntacs
 *  Translation Toolkit</a> on Fri Jul 06 12:05:08 PDT 2001
 */
class RegexpDPA
extends MesoArrayDPA
{
    
    RegexpDPA()
    {
        super(_action, _go, _actions);
    }
    private static int[][] _action;
    private static int[] _actions;
    private static int[][] _go;
    
    static {
        _action = Pickler.unpickle2D(" G 3 \" 2 !           \"   # $ % &     ( ) * 5   2 E   E   E E E E E E E E E E     E E E 3 \" 2 !           \"   # $ % &     ( ) * 2 # 2 ?                         ? ? ? 2 # 2 >                         > > > 2 # 2 =                         = = = 2 # 2 <                     \'   < < < 5   2 ;   ;   ; ; ; ; ; ; ; ; ; ;     ; ; ; 5   2 D   D   D D D D D D D D D D     D D D 5   2 C   C   C C C C C C C C C C     C C C 5   2 B   B   B B B B B B B B B B     B B B ( $ ) +         5 3 \" 2 !           \"   # $ % &     ( ) * 5   2 7   !   7       \" 7 # $ % &     ( ) * 5   2 8   8   8       8 8 8 8 8 8     8 8 8 5   2 F   F   F , - . F F F F F F     F F F 5   2 L   L   L       L L L L L L     L L L 5   2 J   J   J       J J J J J J     J J J 5   2 K   K   K       K K K K K K     K K K 5   2 9   9   9       9 9 9 9 9 9     9 9 9 5   2 A   A   A A A A A A A A A A     A A A 2 # 2 /                         0 1 2 2 # 2 R                     R R R R R 2 # 2 Q                     Q Q Q Q Q 2 # 2 P                     P P P P P 2 # 2 O                     O O O O O 2 # 2 /                     3   0 1 2 5   2 @   @   @ @ @ @ @ @ @ @ @ @     @ @ @ 2 # 2 M                     M   M M M 2 # 2 S                     S 4 S S S 2 # 2 /                         0 1 2 2 # 2 N                     N   N N N 2 # 2 T                     T   T T T 5   2 G   G   G       G G G G G G     G G G 5   2 :   :   : : : : : : : : : :     : : : 5   2 H   !   H       \" H # $ % &     ( ) * #     6\u8001\u001f\u8001\u001f \'   $ I       +");
        _go = Pickler.unpickle2D(" D * 3 : D F C A   / 4 5\u8001\u001f\u8001\u001f ) 4 : + C A   / 4 5\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f ( 5 : - A   / 4 5 \' 6 : .   / 4 5\u8001\u001f\u8001\u001f # 7 7 3\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f % ; = : @ =\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f $ < = < =\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f # = = ?\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f\u8001\u001f \' 6 : .   / 4 5");
        _actions = Pickler.unpickle1D(" U  0!0\"0#0$0%0&0\'0(0)0*0,000102060708090;0>0BP @\"@$@&@/@1@5@4@3@2@0@.@-@,@+@*@%@#@!@ @)@(@\'@7@9@=@<@;@:@8@6");
    } 
}